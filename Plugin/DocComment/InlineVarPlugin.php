<?php

namespace Drenso\PhanExtensions\Plugin\DocComment;

require_once __DIR__ . '/../../Helper/NamespaceChecker.php';

use Drenso\PhanExtensions\Helper\NamespaceChecker;
use Phan\CodeBase;
use Phan\Language\Element\Clazz;
use Phan\PluginV2;
use Phan\PluginV2\AnalyzeClassCapability;

class InlineVarPlugin extends PluginV2 implements AnalyzeClassCapability
{
  public function analyzeClass(CodeBase $code_base, Clazz $class)
  {
    // Check the file ref
    $file = $class->getFileRef();
    if ($file->isPHPInternal()) return;

    // Only check files in the src directory
    if (strpos($file, 'src/') === 0) {

      preg_match_all('/\/\*\*? \@var ([\w]+) ([\$\w]+) \*?\*\//m', file_get_contents($file->getFile()), $matches);
      foreach ($matches[1] as $match) {
        NamespaceChecker::checkPlugin($this, $code_base, $class->getContext(), $match, "VarStatementNotImported",
            "The declaration {CLASS} in the \"var\" statement was never imported (generated by InlineVar plugin)");
      }
    }
  }
}

// Every plugin needs to return an instance of itself at the
// end of the file in which its defined.
return new InlineVarPlugin();
